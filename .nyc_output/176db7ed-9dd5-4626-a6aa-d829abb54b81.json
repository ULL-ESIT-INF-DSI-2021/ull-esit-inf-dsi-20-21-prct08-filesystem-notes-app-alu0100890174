{"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/Note.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/Note.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"2":{"start":{"line":9,"column":0},"end":{"line":14,"column":50}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":38}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":36}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":42}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":40}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":27}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":25}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"10":{"start":{"line":29,"column":8},"end":{"line":46,"column":9}},"11":{"start":{"line":31,"column":27},"end":{"line":31,"column":28}},"12":{"start":{"line":32,"column":16},"end":{"line":32,"column":38}},"13":{"start":{"line":33,"column":16},"end":{"line":33,"column":22}},"14":{"start":{"line":35,"column":26},"end":{"line":35,"column":27}},"15":{"start":{"line":36,"column":16},"end":{"line":36,"column":37}},"16":{"start":{"line":37,"column":16},"end":{"line":37,"column":22}},"17":{"start":{"line":39,"column":29},"end":{"line":39,"column":30}},"18":{"start":{"line":40,"column":16},"end":{"line":40,"column":40}},"19":{"start":{"line":41,"column":16},"end":{"line":41,"column":22}},"20":{"start":{"line":43,"column":28},"end":{"line":43,"column":29}},"21":{"start":{"line":44,"column":16},"end":{"line":44,"column":39}},"22":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":1},"end":{"line":9,"column":2}},"loc":{"start":{"line":9,"column":18},"end":{"line":14,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":45},"end":{"line":47,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":48}},"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":24}},{"start":{"line":14,"column":29},"end":{"line":14,"column":47}}],"line":14},"1":{"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":43}},"type":"default-arg","locations":[{"start":{"line":25,"column":37},"end":{"line":25,"column":43}}],"line":25},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":46,"column":9}},"type":"switch","locations":[{"start":{"line":30,"column":12},"end":{"line":33,"column":22}},{"start":{"line":34,"column":12},"end":{"line":37,"column":22}},{"start":{"line":38,"column":12},"end":{"line":41,"column":22}},{"start":{"line":42,"column":12},"end":{"line":45,"column":22}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":7,"8":7,"9":7,"10":7,"11":3,"12":3,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":1},"f":{"0":1,"1":7},"b":{"0":[1,1],"1":[3],"2":[3,1,1,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/Note.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/Note.ts"],"names":[],"mappings":";;;;AAEA;;GAEG;AACH,IAAY,KAAgC;AAA5C,WAAY,KAAK;IAAE,iCAAI,CAAA;IAAE,+BAAG,CAAA;IAAE,qCAAM,CAAA;IAAE,mCAAK,CAAA;AAAA,CAAC,EAAhC,KAAK,GAAL,aAAK,KAAL,aAAK,QAA2B;AAe5C;;;;;;;;GAQG;AACH,MAAa,IAAI;IAEb,YACW,KAAa,EACb,IAAY,EACZ,QAAgB,MAAM;QAFtB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAiB;QACzB,QAAQ,KAAK,EAAE;YACX,KAAK,MAAM;gBACP,IAAI,IAAI,GAAU,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,MAAM;YACV,KAAK,KAAK;gBACN,IAAI,GAAG,GAAU,CAAC,CAAC;gBACnB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,MAAM;YACV,KAAK,QAAQ;gBACT,IAAI,MAAM,GAAU,CAAC,CAAC;gBACtB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,KAAK,GAAU,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,MAAM;SACb;IACT,CAAC;CACJ;AAzBD,oBAyBC","sourcesContent":["#!/usr/bin/env node\n\n/**\n * enumerable para colores {azul, rojo, amarillo y verde}\n */\nexport enum color {blue, red, yellow, green}\ntype Color = color;\n\n/**\n * Interfaz que debe implementar nuestra clase Note.\n * @param title Titulo de la nota\n * @param body Contenido de la nota\n * @param colorType Color que tendr√° la nota\n */\ninterface NoteStructure {\n    title: string;\n    body: string;\n    colorType: color;\n}\n\n/**\n * Class Note . Implementa la Interfaz NoteStructure; \n * representa una nota       \n * @param color String con el valor del color\n * @param title String con el nombre de la nota\n * @param body  String con el contenido de la nota\n * @param colorType Color Type con enumerable color\n *      { blue=0, red=1, yellow=2, green=3}\n */\nexport class Note implements NoteStructure {\n    public colorType: color;\n    constructor(\n        public title: string,\n        public body: string,\n        public color: string = 'blue') {\n            switch (color) {\n                case 'blue':\n                    let blue: Color = 0;\n                    this.colorType = blue;\n                    break;\n                case 'red':\n                    let red: Color = 1;\n                    this.colorType = red;\n                    break;\n                case 'yellow':\n                    let yellow: Color = 2;\n                    this.colorType = yellow;\n                    break;                \n                case 'green':\n                    let green: Color = 3;\n                    this.colorType = green;\n                    break;\n            }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e08e6120ca2ab6373e15b7b23cbe8edad2b084b4","contentHash":"21a43d7ea2c5783512d2998e7014f3eb0ad40c7fddffdd6988baaf7db598456f"},"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/ProcessNote.ts":{"path":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/ProcessNote.ts","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":5,"column":11},"end":{"line":5,"column":24}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":30}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":25}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"6":{"start":{"line":25,"column":8},"end":{"line":25,"column":40}},"7":{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},"8":{"start":{"line":27,"column":12},"end":{"line":27,"column":25}},"9":{"start":{"line":28,"column":12},"end":{"line":28,"column":58}},"10":{"start":{"line":31,"column":12},"end":{"line":32,"column":73}},"11":{"start":{"line":39,"column":8},"end":{"line":46,"column":9}},"12":{"start":{"line":40,"column":12},"end":{"line":40,"column":70}},"13":{"start":{"line":41,"column":12},"end":{"line":41,"column":56}},"14":{"start":{"line":44,"column":12},"end":{"line":45,"column":67}},"15":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"16":{"start":{"line":53,"column":26},"end":{"line":53,"column":35}},"17":{"start":{"line":54,"column":12},"end":{"line":54,"column":67}},"18":{"start":{"line":55,"column":12},"end":{"line":55,"column":72}},"19":{"start":{"line":58,"column":12},"end":{"line":59,"column":69}},"20":{"start":{"line":66,"column":8},"end":{"line":72,"column":9}},"21":{"start":{"line":67,"column":12},"end":{"line":67,"column":95}},"22":{"start":{"line":68,"column":12},"end":{"line":68,"column":73}},"23":{"start":{"line":71,"column":12},"end":{"line":71,"column":79}},"24":{"start":{"line":73,"column":8},"end":{"line":73,"column":21}},"25":{"start":{"line":79,"column":8},"end":{"line":81,"column":11}},"26":{"start":{"line":80,"column":12},"end":{"line":80,"column":62}},"27":{"start":{"line":89,"column":8},"end":{"line":100,"column":9}},"28":{"start":{"line":90,"column":28},"end":{"line":90,"column":96}},"29":{"start":{"line":91,"column":12},"end":{"line":91,"column":46}},"30":{"start":{"line":92,"column":12},"end":{"line":92,"column":44}},"31":{"start":{"line":93,"column":12},"end":{"line":93,"column":46}},"32":{"start":{"line":94,"column":12},"end":{"line":94,"column":54}},"33":{"start":{"line":95,"column":12},"end":{"line":96,"column":83}},"34":{"start":{"line":99,"column":12},"end":{"line":99,"column":66}},"35":{"start":{"line":106,"column":19},"end":{"line":106,"column":44}},"36":{"start":{"line":107,"column":8},"end":{"line":107,"column":77}},"37":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"38":{"start":{"line":117,"column":12},"end":{"line":117,"column":65}},"39":{"start":{"line":118,"column":12},"end":{"line":118,"column":86}},"40":{"start":{"line":120,"column":13},"end":{"line":122,"column":9}},"41":{"start":{"line":121,"column":12},"end":{"line":121,"column":25}},"42":{"start":{"line":123,"column":8},"end":{"line":123,"column":20}},"43":{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},"44":{"start":{"line":133,"column":12},"end":{"line":133,"column":25}},"45":{"start":{"line":136,"column":12},"end":{"line":136,"column":24}},"46":{"start":{"line":140,"column":0},"end":{"line":140,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":28},"end":{"line":20,"column":5}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":10},"end":{"line":34,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":13},"end":{"line":47,"column":5}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":17},"end":{"line":61,"column":5}},"line":51},"4":{"name":"(anonymous_4)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":13},"end":{"line":74,"column":5}},"line":65},"5":{"name":"(anonymous_5)","decl":{"start":{"line":78,"column":4},"end":{"line":78,"column":5}},"loc":{"start":{"line":78,"column":15},"end":{"line":82,"column":5}},"line":78},"6":{"name":"(anonymous_6)","decl":{"start":{"line":79,"column":50},"end":{"line":79,"column":51}},"loc":{"start":{"line":79,"column":61},"end":{"line":81,"column":9}},"line":79},"7":{"name":"(anonymous_7)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":22},"end":{"line":101,"column":5}},"line":88},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":12},"end":{"line":108,"column":5}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":27},"end":{"line":124,"column":5}},"line":115},"10":{"name":"(anonymous_10)","decl":{"start":{"line":131,"column":4},"end":{"line":131,"column":5}},"loc":{"start":{"line":131,"column":27},"end":{"line":138,"column":5}},"line":131}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":33,"column":9}},{"start":{"line":26,"column":8},"end":{"line":33,"column":9}}],"line":26},"1":{"loc":{"start":{"line":39,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":46,"column":9}},{"start":{"line":39,"column":8},"end":{"line":46,"column":9}}],"line":39},"2":{"loc":{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":60,"column":9}},{"start":{"line":52,"column":8},"end":{"line":60,"column":9}}],"line":52},"3":{"loc":{"start":{"line":66,"column":8},"end":{"line":72,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":72,"column":9}},{"start":{"line":66,"column":8},"end":{"line":72,"column":9}}],"line":66},"4":{"loc":{"start":{"line":89,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":100,"column":9}},{"start":{"line":89,"column":8},"end":{"line":100,"column":9}}],"line":89},"5":{"loc":{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":122,"column":9}},{"start":{"line":116,"column":8},"end":{"line":122,"column":9}}],"line":116},"6":{"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":74}},"type":"binary-expr","locations":[{"start":{"line":116,"column":13},"end":{"line":116,"column":54}},{"start":{"line":116,"column":60},"end":{"line":116,"column":73}}],"line":116},"7":{"loc":{"start":{"line":120,"column":13},"end":{"line":122,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":13},"end":{"line":122,"column":9}},{"start":{"line":120,"column":13},"end":{"line":122,"column":9}}],"line":120},"8":{"loc":{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},{"start":{"line":132,"column":8},"end":{"line":137,"column":9}}],"line":132}},"s":{"0":1,"1":1,"2":1,"3":1,"4":4,"5":4,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":0,"20":1,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":0,"35":2,"36":2,"37":2,"38":1,"39":1,"40":1,"41":0,"42":2,"43":5,"44":1,"45":4,"46":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2,"8":2,"9":2,"10":5},"b":{"0":[1,0],"1":[1,0],"2":[1,0],"3":[0,1],"4":[2,0],"5":[1,1],"6":[2,1],"7":[0,1],"8":[1,4]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/ProcessNote.ts","sources":["/home/usuario/ull-esit-inf-dsi-20-21-prct08-filesystem-notes-app-alu0100890174/src/ProcessNote.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nconst fs = require('fs');\nconst chalk = require('chalk');\nimport {Note} from './Note';\n\n/**\n * ProcessNote . Clase que expande Note, implementa un identificador para el usuario \n * de cada nota y las funcionalidades que permitir√°n al mismo crear, guardar y editarlas.\n */\nexport class ProcessNote<N extends Note> {\n    /**\n     * \n     * @param user Nombre del usuario propietario de la nota\n     * @param Note Objeto que contiene una nota {Titulo, Cuerpo y Color}\n     */\n    constructor(private user: string, private Note: N){}\n\n    /**\n     * Permite crear y almacenar la nota de un usuario en formato JSON.\n     */\n    add(): void {\n        this.chechUser(this.user, true);\n        if(this.checkNote(this.user, this.Note.title) == false) {\n            this.write();\n            console.log(chalk.green(`\\nNew note added.`));\n        } else {\n            console.log(chalk.red(\n                '\\nERROR. That note already exist.\\n' +\n                'Yo can modify it using the command: --m | --modify .'));\n        }\n        \n    }\n\n    /**\n     * Permite eliminar una nota de un usuario de la base de datos JSON.\n     */\n    remove() {\n        if(this.checkNote(this.user, this.Note.title) == true) {\n            fs.rmSync(`./Notes/${this.user}/${this.Note.title}.json`);\n            console.log(chalk.green(`\\nNote removed.`));\n        } else {\n            console.log(chalk.red(\n                '\\nERROR. The note you are trying to remove doesn\\'t exist.\\n' + \n                'Yo can add it using the command: --a | --add .'));\n        }\n    }\n\n    /**\n     * Permite eliminar toda la informaci√≥n almacenada de un usuario de la base de datos.\n     */\n    public removeUser() {\n        if(this.chechUser(this.user) == true) {\n            let oldUser = this.user;\n            fs.rmSync(`./Notes/${this.user}`, {recursive: true});\n            console.log(chalk.green(`\\nUser${oldUser} notes removed.`));\n        } else {\n            console.log(chalk.red(\n                '\\nERROR. The user you are trying to remove doesn\\'t has notes at this moment.\\n' + \n                'Yo can add some using the command: --a | --add .'));\n        }\n    }\n\n    /**\n     * Permite modificar una nota de un usuario de la base de datos en formato JSON.\n     */\n    modify() {\n        if (this.checkNote(this.user, this.Note.title) == false) {\n            console.log(chalk.red(\n                '\\nERROR. The note you are trying to edit doesn\\'t exist.'));\n            console.log(chalk.green(\n                '\\nYou created a new one instead.'));\n        } else {\n            console.log(chalk.green(\n                '\\nThe note has been modify successfuly'));\n        }\n        this.write();\n    }\n\n    /**\n     * Permite mostrar todas las notas de un usuario.\n     */    \n    list(user: string) {\n        fs.readdirSync(`./Notes/${user}`).forEach((notes) => {\n\n            this.read(user, notes.slice(0, notes.length - 5));\n        })\n    }\n\n    /**\n     * read . Permite a un usuario leer una nota de la base de datos siempre y cuando exista.\n     * @param user Usuario que quiere leer una nota\n     * @param title T√≠tulo de la nota que desea leer\n     */\n    read(user: string, title: string) {\n        if(this.checkNote(user, title) == true) {\n            let stackNote = JSON.parse(fs.readFileSync(`./Notes/${user}/${title}.json`,'utf8'));\n            this.Note.title = stackNote.title;\n            this.Note.body = stackNote.body;\n            this.Note.color = stackNote.color;\n            this.Note.colorType = stackNote.colorType;\n            console.log('\\n' + chalk.keyword('white').bgKeyword(this.Note.color)(this.Note.title + ' ') + '\\n' + \n                        chalk.keyword(this.Note.color).bgKeyword('white')(this.Note.body));\n        } else {\n            console.log(chalk.red(\n                '\\nThat note doesn\\'t exist.'));\n        }\n    }\n\n    /**\n     * write . Metodo privado que permite escribir una nota en la base de datos.\n     */\n    private write() {\n        let json = JSON.stringify(this.Note);\n        fs.writeFileSync(`Notes/${this.user}/${this.Note.title}.json`, json);\n    }\n\n    /**\n     *  checkUser . Comprueba si existe informaci√≥n de un usuario en la base de datos.\n     * @param user Usuario que se quiere comprobar\n     * @param crear Booleano para crear nuevo directorio en caso de no existir.\n     * @returns \n     */\n    private chechUser(user: string, crear?: boolean): boolean{\n        if((fs.existsSync(`./Notes/${user}`) == false) && (crear == true)) {\n            fs.mkdirSync(`./Notes/${user}`, {recursive: true});\n            console.log('\\n' + chalk.green('\\nNotes saved at: ') + `Notes/${user} .`);\n        } else if (fs.existsSync(`./Notes/${user}`) == false) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * checkNote . Comprueba si existe una nota en la base de datos.\n     * @param user Usuario que busca la existencia de una nota en la base de datos.\n     * @param title T√≠tulo de la nota que se quiere comprobar\n     * @returns \n     */\n    private checkNote(user: string, title: string): boolean {\n        if(fs.existsSync(`./Notes/${user}/${title}.json`) == false) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3d5f39e90a56e8f27701e02452ae2c256b8d55de","contentHash":"7b2d7b5b5bf4997f5d936e64151fe9c45fa41cbcab5bfbd1837c30fb4e82fd7f"}}